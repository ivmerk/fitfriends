generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  trainer
  user
}

model User {
  userId            Int          @id @default(autoincrement()) @map("user_id")
  userName          String       @default("") @map("user_name")
  userMail          String       @default("") @map("user_mail")
  userAvatar        String?      @default("") @map("user_avatar")
  password          String       @default("")
  userGender        String       @default("") @map("user_gender")
  birthDate         DateTime?    @map("birth_date")
  userRole          UserRole     @map("user_role")
  description       String?      @default("")
  location          String       @default("")
  backgraundPicture String       @default("") @map("backgraund_picture")
  createdAt         DateTime     @default(now()) @map("created_at")
  userBody          UserBody?
  trainerBody       TrainerBody?
  levelOfExperience String?      @default("") @map("level_of_experience")
  typesOfTraning    String[]     @map("types_of_traning")

  @@map("users")
}

model UserBody {
  id     Int  @id @default(autoincrement()) @map("user_body_id")
  user   User @relation(fields: [userId], references: [userId], onDelete: Cascade, onUpdate: Cascade)
  userId Int  @unique @map("user_id")

  @@map("user_body")
}

model TrainerBody {
  id     Int  @id @default(autoincrement()) @map("trainer_body_id")
  user   User @relation(fields: [userId], references: [userId], onDelete: Cascade, onUpdate: Cascade)
  userId Int  @unique @map("user_id")

  @@map("trainer_body")
}
